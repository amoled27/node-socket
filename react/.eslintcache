[{"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/index.js":"1","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/services/socket.js":"2","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/App.js":"3","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/reportWebVitals.js":"4","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/linked-list/linked-list-view.js":"5","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/node-adder/node-adder.js":"6","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/linked-list/linked-list.js":"7"},{"size":559,"mtime":1608813773551,"results":"8","hashOfConfig":"9"},{"size":153,"mtime":1608813640537,"results":"10","hashOfConfig":"9"},{"size":670,"mtime":1608813735692,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1608813321549,"results":"12","hashOfConfig":"9"},{"size":1768,"mtime":1608821257179,"results":"13","hashOfConfig":"9"},{"size":1567,"mtime":1608821384233,"results":"14","hashOfConfig":"9"},{"size":566,"mtime":1608813606377,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"n4q2m9",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/index.js",[],["32","33"],"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/services/socket.js",[],"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/App.js",[],"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/reportWebVitals.js",[],"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/linked-list/linked-list-view.js",["34"],"import React from 'react';\nimport linkedList from './linked-list.js';\nimport css from './linked-list-view.module.css';\n\n\nclass LinkedListView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodes: []\n        }\n        this.list = new linkedList();\n    }\n\n    componentDidMount() {\n        //listens to push in the socket\n        this.props.socket.on('node', (value) => {\n            this.list.push(value);\n            this.updateList();\n        })\n    }\n\n    //updates the linked list after a node is pushed\n    updateList() {\n        let lastNode = this.list.tail;\n        this.setState({\n            nodes: [...this.state.nodes, { value: lastNode.value, bgColor: this.generateRandomColor() }]\n        });\n    }\n\n    //returns UI component for Head arrow\n    headArrow() {\n        return this.state.nodes.length ? <div className={css.head}>\n            Head\n        <img alt=\"head_arrow\" className=\"img img-fluid\" src=\"right-arrow.svg\"></img>\n        </div> : null;\n    }\n\n    //generates random color for the node\n    generateRandomColor() {\n        let hexString = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += hexString[Math.floor(Math.random() * hexString.length)];\n        }\n        return color;\n    }\n    render() {\n        return (\n            <div className=\"container\" className={css.node_container}>\n                <h5>Linked List</h5>\n                {this.headArrow()}\n                {this.state.nodes.map((node, index) => {\n                    return <div className={css.node} style={{ background: node.bgColor }} key={index}>{node.value}</div>\n                })}\n            </div>\n        )\n    }\n}\nexport default LinkedListView; ","/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/node-adder/node-adder.js",[],"/home/amod/Documents/xboost/DayX/react-socket-1/socket-react/src/page/linked-list/linked-list.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":50,"column":40,"nodeType":"41","endLine":50,"endColumn":70},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]