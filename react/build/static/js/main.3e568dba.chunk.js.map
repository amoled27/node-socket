{"version":3,"sources":["page/linked-list/linked-list-view.module.css","page/linked-list/linked-list.js","page/linked-list/linked-list-view.js","page/node-adder/node-adder.js","App.js","reportWebVitals.js","services/socket.js","index.js"],"names":["module","exports","linkedList","length","head","tail","push","value","newNode","next","this","LinkedListView","props","state","nodes","list","socket","on","updateList","lastNode","setState","bgColor","generateRandomColor","className","css","alt","src","hexString","color","i","Math","floor","random","node_container","headArrow","map","node","index","style","background","React","Component","Style","cardBody","boxShadow","borderRadius","padding","border","card","width","input","btn","margin","fontWeight","cursor","NodeAdder","nodeValue","emit","e","target","to","fontSize","type","onChange","updateInput","bind","onClick","inputHandler","App","height","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socketIOClient","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e568dba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"linked-list-view_node__159zS\",\"node_container\":\"linked-list-view_node_container__3AZJn\",\"head\":\"linked-list-view_head__3DazH\"};","let linkedList = function () {\n    return {\n        length: 0,\n        head: null,\n        tail: null,\n        push: function (value) {\n            let newNode = {\n                value: value,\n                next: null\n            }\n            if (this.length > 0) {\n\n                this.tail.next = newNode;\n                this.tail = this.tail.next;\n\n            } else {\n                this.head = newNode;\n                this.tail = newNode;\n            }\n            this.length++;\n            return newNode;\n        }\n    }\n}\nexport default linkedList;","import React from 'react';\nimport linkedList from './linked-list.js';\nimport css from './linked-list-view.module.css';\n\n\nclass LinkedListView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodes: []\n        }\n        this.list = new linkedList();\n    }\n\n    componentDidMount() {\n        //listens to push in the socket\n        this.props.socket.on('node', (value) => {\n            this.list.push(value);\n            this.updateList();\n        })\n    }\n\n    //updates the linked list after a node is pushed\n    updateList() {\n        let lastNode = this.list.tail;\n        this.setState({\n            nodes: [...this.state.nodes, { value: lastNode.value, bgColor: this.generateRandomColor() }]\n        });\n    }\n\n    //returns UI component for Head arrow\n    headArrow() {\n        return this.state.nodes.length ? <div className={css.head}>\n            Head\n        <img alt=\"head_arrow\" className=\"img img-fluid\" src=\"right-arrow.svg\"></img>\n        </div> : null;\n    }\n\n    //generates random color for the node\n    generateRandomColor() {\n        let hexString = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += hexString[Math.floor(Math.random() * hexString.length)];\n        }\n        return color;\n    }\n    render() {\n        return (\n            <div className=\"container\" className={css.node_container}>\n                <h5>Linked List</h5>\n                {this.headArrow()}\n                {this.state.nodes.map((node, index) => {\n                    return <div className={css.node} style={{ background: node.bgColor }} key={index}>{node.value}</div>\n                })}\n            </div>\n        )\n    }\n}\nexport default LinkedListView; ","import React from 'react';\nimport {Link} from 'react-router-dom';\nlet Style = {\n    cardBody: {\n        boxShadow: \"7px 6px 8px #d0cdcd\",\n        borderRadius: \"11px\",\n        padding: \"15px\",\n        border: \"1px solid #efefef\"\n    },\n    card: {\n        width: \"350px\"\n    },\n    input: {\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        border: \"1px solid #d6d4d4\"\n    },\n    btn: {\n        margin: \"10px\",\n        padding: \"10px 20px\",\n        background: \"#67a5ca\",\n        border: \"0px\",\n        color: \"#fff\",\n        borderRadius: \"6px\",\n        fontWeight: \"600\",\n        cursor: \"pointer\"\n    }\n};\nclass NodeAdder extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodeValue: ''\n        }\n    }\n\n    inputHandler() {\n        this.props.socket.emit('nodeValue', this.state.nodeValue);\n    }\n    updateInput(e) {\n        this.setState({ nodeValue: e.target.value });\n    }\n    render() {\n        return (\n            <div>\n                <Link to={\"/linkedlist\"} target=\"_blank\" style={{fontSize: \"20px\"}}> Linked List</Link>\n                <div style={Style.card}>\n                    <div style={Style.cardBody}>\n                        <h3>Add a Node</h3>\n                        <input type=\"text\" style={Style.input} onChange={this.updateInput.bind(this)}></input>\n                        <button style={Style.btn} onClick={this.inputHandler.bind(this)}>Add</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NodeAdder; ","import './App.css';\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LinkedListView from \"./page/linked-list/linked-list-view.js\";\nimport NodeAdder from './page/node-adder/node-adder.js';\nfunction App({socket}) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Switch>\n            <Route path=\"/linkedlist\"\n              render={() => <LinkedListView socket={socket} />} />\n            <Route path=\"/\"\n              render={() => <NodeAdder socket={socket} />} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import socketIOClient from \"socket.io-client\";\nconst ENDPOINT = 'http://localhost:5000';\nconst socket = socketIOClient(ENDPOINT);\n\nexport default socket;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport socket from './services/socket.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App socket={socket} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}